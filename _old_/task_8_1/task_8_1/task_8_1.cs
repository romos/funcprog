/*
Task 8.1
*Задача (скорее упражнение) на C# (дополнительная, до 8.10 включительно*

В С# для контейнеров определен метод Any, который позволяет проверить, есть ли в контейнере элемент, удовлетворяющий данному условию. И есть аналогичный метод All. Вот примеры их вызовов:

int [] a = {-1, 2, -3, 4};
bool b = a.Any(x => x > 0); // Верно, ли что в массиве есть положительный элемент?
b = a.All(x => x > 0); // Верно, ли что все элементы в массиве положительные?

Используя только эти методы и лямбда выражения, проверить для данного двумерного массива массивов (или, если хотите, списка списков), 
что в каждом из массивов есть хотя бы один четный элемент.

Замечания:
- На эту задачу тестов нет, вы просто можете выложить в систему код на С#, и я его просмотрю.
- Но код должен быть таким, чтобы его можно было скомпилировать и запустить, с каким-нибудь примером вызова.
- Просто как информация, на самом деле All и Any определены не только для контейнеров, а еще много для чего.
*/

using System;
using System.Linq;

namespace task_8_1
{
	class Task
	{
		static bool CheckParity(int[][] array)
		{
			return array.All(xs => xs.Any(x => x % 2 == 0));
		}
		
		static void Main(string[] args)
		{
			int[][] array1 = { new int[] {1, 3, 5}, new int[] {5, 7, 8, 9, 11} };
			int[][] array2 = { new int[] {1, 3, 4}, new int[] {5, 6, 7}, new int[] {1, 3, 5, 6, 7, 7} };
			
			Console.WriteLine("{0}", CheckParity(array1));
			Console.WriteLine("{0}", CheckParity(array2));
		}
	}
}
